{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","name","useRef","image","useCase","initialize","useState","account","setAccount","myContract","setMyContract","isNeedSchool","setIsNeedSchool","validated","setValidated","isSent","setIsSent","firstRender","a","provider","window","ethereum","web3","Web3","request","method","console","log","currentProvider","alert","eth","getAccounts","accounts","on","networkId","Object","keys","networks","networkData","Contract","abi","address","_chainId","location","reload","current","fetchData","useCallback","createStudent","IPFShash","methods","send","from","createSchool","createCourse","fetchCourse","call","createCertificate","fetchCertificate","fetchStudent","fetchSchool","result","error","fetchToWeb3","catch","useEffect","init","className","Container","fluid","Nav","activeKey","Item","Link","eventKey","disabled","Form","noValidate","onSubmit","event","preventDefault","currentTarget","checkValidity","stopPropagation","target","value","FloatingLabel","label","Select","aria-label","required","id","onChange","e","Group","controlId","Label","Control","type","placeholder","Text","style","color","Button","variant","Spinner","as","animation","size","role","aria-hidden","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4041718.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport Web3 from 'web3';\r\nimport w3utils from 'web3-utils'\r\nimport { networks, abi } from \"./contracts/Certification.json\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Nav, Container, Form, Button, FloatingLabel, Spinner } from 'react-bootstrap';\r\n\r\nimport './App.css';\r\n\r\n\r\n// TODO if network or accaunt changed cantract should update but nothing happend\r\nexport default function App() {\r\n  const name = useRef<string>('')\r\n  const image = useRef<string>('')\r\n  const useCase = useRef<string>('')\r\n  const initialize = useRef<boolean>(false)\r\n  const [account, setAccount] = useState<string>('')\r\n  const [myContract, setMyContract] = useState<any>()\r\n  const [isNeedSchool, setIsNeedSchool] = useState<boolean>(false)\r\n  const [validated, setValidated] = useState(false);\r\n  const [isSent, setIsSent] = useState<boolean>(false)\r\n  const firstRender = useRef(false);\r\n\r\n  async function init() {\r\n    let provider = window.ethereum\r\n    if (provider) {\r\n      window.web3 = new Web3(provider);\r\n      await provider.request({ method: 'eth_requestAccounts' })\r\n      console.log('new provider');\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n      console.log('currentProvider');\r\n    }\r\n    else {\r\n      window.alert('non ethereum browser detected. You should consider to trying metamask')\r\n    }\r\n\r\n    const web3 = new Web3(provider)\r\n    let accounts = await web3.eth.getAccounts()\r\n    setAccount(accounts[0])\r\n    window.ethereum.on(\"accountsChanged\", async function () {\r\n      // Time to reload your interface with accounts[0]!\r\n      accounts = await web3.eth.getAccounts();\r\n      // accounts = await web3.eth.getAccounts();\r\n      setAccount(accounts[0])\r\n      console.log(accounts);\r\n    });\r\n    console.log(account);\r\n    let networkId = Object.keys(networks)[0] as keyof typeof networks;\r\n    const networkData = networks[networkId]\r\n    if (networkData) {\r\n      setMyContract(new web3.eth.Contract(abi as w3utils.AbiItem[], networks[networkId].address))\r\n      console.log('contract created');\r\n    } else {\r\n      window.alert('certification dapp not deployed in this network')\r\n    }\r\n    window.ethereum.on('chainChanged', function (_chainId: any) {\r\n      networkData === _chainId ? window.location.reload()\r\n        : window.alert('certification dapp not deployed in this network')\r\n    });\r\n    initialize.current = true\r\n  }\r\n\r\n  const fetchData = useCallback(() => {\r\n    async function createStudent(name: string, IPFShash: string) {\r\n      return myContract.methods.createStudent(name, IPFShash).send({ from: account })\r\n    }\r\n    async function createSchool(name: string, IPFShash: string) {\r\n      return myContract.methods.createSchool(name, IPFShash).send({ from: account })\r\n    }\r\n    async function createCourse(name: string, IPFShash: string) {\r\n      return myContract.methods.fetchCourse(account).call({ from: account })\r\n    }\r\n    async function createCertificate(name: string, IPFShash: string) {\r\n      return myContract.methods.fetchCertificate(account).call({ from: account })\r\n    }\r\n    async function fetchStudent() {\r\n      console.log('adress account', account);\r\n      return myContract.methods.fetchStudent(account).call({ from: account })\r\n    }\r\n    async function fetchSchool() {\r\n      console.log('adress account', account);\r\n      return myContract.methods.fetchSchool(account).call({ from: account })\r\n    }\r\n    async function fetchCourse() {\r\n      console.log('adress account', account);\r\n      return myContract.methods.fetchCourse(account).call({ from: account })\r\n    }\r\n    async function fetchCertificate() {\r\n      console.log('adress account', account);\r\n      return myContract.methods.fetchCertificate(account).call({ from: account })\r\n    }\r\n    async function fetchToWeb3() {\r\n      try {\r\n        setIsSent(true)\r\n        if (useCase.current === \"student\") {\r\n          await createStudent(name.current, image.current)\r\n          const result = await fetchStudent()\r\n          console.log('fetchStudent', result);\r\n        }\r\n        if (useCase.current === \"school\") {\r\n          await createSchool(name.current, image.current)\r\n          const result = await fetchSchool()\r\n          console.log('fetchStudent', result);\r\n        }\r\n        if (useCase.current === \"course\") {\r\n          await createCourse(name.current, image.current)\r\n          const result = await fetchCourse()\r\n          console.log('fetchCourse', result);\r\n        }\r\n        if (useCase.current === \"certificate\") {\r\n          await createCertificate(name.current, image.current)\r\n          const result = await fetchCertificate()\r\n          console.log('fetchCertificate', result);\r\n        }\r\n        setIsSent(false)\r\n      } catch (err) {\r\n        console.error(err);\r\n        setIsSent(false)\r\n      }\r\n    }\r\n    if (validated) {\r\n      fetchToWeb3().catch(error => console.error(error))\r\n      setValidated(false)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [validated])\r\n\r\n  useEffect(() => {\r\n    if (!initialize.current) { init() }\r\n    if (firstRender) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n    useCase.current = event.target.useCase.value\r\n    name.current = event.target.name.value\r\n    image.current = event.target.image.value\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container fluid=\"md\">\r\n        <Nav className=\"justify-content-start\" activeKey=\"/home\">\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"disabled\" disabled>\r\n              your address is : {account}\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <FloatingLabel label=\"what do you wana create?\">\r\n            <Form.Select\r\n              aria-label=\"Floating label select example\"\r\n              required\r\n              id=\"useCase\"\r\n              onChange={(e) => {\r\n                console.log(e.target.value)\r\n                e.target.value === \"course\" || e.target.value === \"certificate\" ? setIsNeedSchool(true) : setIsNeedSchool(false)\r\n              }}\r\n            >\r\n              <option >Open menu</option>\r\n              <option value=\"student\">student</option>\r\n              <option value=\"school\">school</option>\r\n              <option value=\"course\">course</option>\r\n              <option value=\"certificate\">certificate</option>\r\n            </Form.Select>\r\n          </FloatingLabel>\r\n          <br />\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"name\">\r\n            <Form.Label>name</Form.Label>\r\n            <Form.Control type=\"name\" placeholder=\"Enter name\" />\r\n            {isNeedSchool ? <Form.Text style={{ color: \"red\" }}>note that you need to be a school to create a course or certificate</Form.Text> : null}\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"image\">\r\n            <Form.Label>image</Form.Label>\r\n            <Form.Control type=\"name\" placeholder=\"Enter image\" />\r\n          </Form.Group>\r\n          {!isSent ?\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button> :\r\n            <Button variant=\"primary\" disabled>\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"grow\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n              Loading...\r\n            </Button>\r\n          }\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}